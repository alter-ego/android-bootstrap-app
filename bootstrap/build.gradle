buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_tools_version"
        classpath "me.tatarka:gradle-retrolambda:$retrolambda_gradle_version"
        classpath 'me.tatarka.retrolambda.projectlombok:lombok.ast:0.2.3.a2'
    }

    configurations.classpath.exclude group: 'com.android.tools.external.lombok'
}

apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.android.application'
apply from: '../jacoco.gradle'

repositories {
    maven { url "https://dl.bintray.com/alterego-solutions/android" }
}

android {
    compileSdkVersion compile_sdk
    buildToolsVersion "$build_tools_version"

    defaultConfig {
        applicationId "solutions.alterego.bootstrap"
        minSdkVersion min_sdk
        targetSdkVersion target_sdk
        versionCode app_version_code
        versionName "$app_version_name"
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            testCoverageEnabled true

            // Extra fields used to configure Robolectric test suites.
            buildConfigField "int", "TEST_TARGET_SDK_VERSION", "25"
            buildConfigField "String", "TEST_APPLICATION_ID", "\"solutions.alterego.bootstrap.debug\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // Extra fields used to configure Robolectric test suites.
            buildConfigField "int", "TEST_TARGET_SDK_VERSION", "25"
            buildConfigField "String", "TEST_APPLICATION_ID", "\"solutions.alterego.bootstrap\""
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    testOptions {
        unitTests.returnDefaultValues = true

        unitTests.all {
            jvmArgs '-Xmx512m'
            systemProperty 'robolectric.logging.enable', 'true'
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }

    tasks.withType(Test) {
        testLogging {
            events "started", "passed", "skipped", "failed", "standardOut", "standardError"
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:$support_libraries_version"
    compile "com.android.support:design:$support_libraries_version"
    compile 'solutions.alterego:advancedandroidlogger:1.0.8@aar'
    compile 'com.android.support:multidex:1.0.1'

    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknife_version"
    compile "com.jakewharton:butterknife:$butterknife_version"

    annotationProcessor "org.projectlombok:lombok:$lombok_version"
    provided "org.projectlombok:lombok:$lombok_version"

    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    compile "com.google.dagger:dagger:$dagger_version"
    provided 'javax.annotation:jsr250-api:1.0'
    
    compile "io.reactivex.rxjava2:rxjava:2.0.8"
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'nl.littlerobots.rxlint:rxlint:1.2'

    compile "com.squareup.retrofit2:retrofit:$retrofit_version"
    compile "com.squareup.retrofit2:converter-gson:$retrofit_version"
    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    compile "com.squareup.okhttp3:okhttp:$okhttp_version"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    compile 'com.google.code.gson:gson:2.8.0'
    compile 'net.danlew:android.joda:2.9.9'

    compile "com.facebook.stetho:stetho:$stetho_version"
    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"
    androidTestCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"
    compile 'com.squareup.haha:haha:2.0.3' //leakcanary uses this, prints lots of warnings otherwise

    compile('com.mikepenz.materialdrawer:library:2.9.2@aar') {
        transitive = true
    }

    //unit testing
    androidTestCompile 'org.easytesting:fest-assert-core:2.0M10'
    androidTestCompile "com.linkedin.dexmaker:dexmaker:$dexmaker_version"
    androidTestCompile "com.linkedin.dexmaker:dexmaker-mockito:$dexmaker_version"
    androidTestCompile "com.github.fabioCollini:DaggerMock:$dagger_mock_version"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    androidTestCompile("com.google.dagger:dagger:$dagger_version") {
        exclude group: 'javax.annotation'
    }

    androidTestCompile("com.android.support.test.espresso:espresso-core:$espresso_version") {
        exclude module: 'dagger'
    }
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$espresso_version") {
        exclude module: 'dagger'
    }
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$espresso_version"
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile "com.android.support:appcompat-v7:$support_libraries_version"

    androidTestCompile "com.android.support:recyclerview-v7:$support_libraries_version"
    androidTestCompile "com.android.support:design:$support_libraries_version"

    testCompile('junit:junit:4.12') {
        exclude module: 'hamcrest'
        exclude module: 'hamcrest-core'
    }
    testCompile 'org.easytesting:fest-assert-core:2.0M10'
    testCompile('org.mockito:mockito-core:1.10.19') {
        exclude module: 'hamcrest'
        exclude module: 'hamcrest-core'
    }
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile "com.google.dagger:dagger:$dagger_version"
    testCompile "com.google.dagger:dagger-compiler:$dagger_version"
    testCompile "com.github.fabioCollini:DaggerMock:$dagger_mock_version"
    testCompile "org.robolectric:robolectric:3.3.2"
    testCompile "org.robolectric:shadows-multidex:3.3.2"
}
